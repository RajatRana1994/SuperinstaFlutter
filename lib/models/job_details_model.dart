///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class JobDetailsModelDataSubCategory {
/*
{
  "id": 3,
  "categoryId": 1,
  "name": "Plumber",
  "image": "",
  "status": 0,
  "created": 0,
  "modified": 0
}
*/

  int? id;
  int? categoryId;
  String? name;
  String? image;
  int? status;
  int? created;
  int? modified;

  JobDetailsModelDataSubCategory({
    this.id,
    this.categoryId,
    this.name,
    this.image,
    this.status,
    this.created,
    this.modified,
  });
  JobDetailsModelDataSubCategory.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    categoryId = json['categoryId']?.toInt();
    name = json['name']?.toString();
    image = json['image']?.toString();
    status = json['status']?.toInt();
    created = json['created']?.toInt();
    modified = json['modified']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['categoryId'] = categoryId;
    data['name'] = name;
    data['image'] = image;
    data['status'] = status;
    data['created'] = created;
    data['modified'] = modified;
    return data;
  }
}

class JobDetailsModelDataJobProposalsUsers {
/*
{
  "id": 2,
  "name": "Jyoti Builders",
  "email": "jyoti@yopmail.com",
  "phone": "7888644412",
  "profile": "https://app.superinstajobs.com/uploads/1743437099493.0781.jpg"
}
*/

  int? id;
  String? name;
  String? email;
  String? phone;
  String? profile;

  JobDetailsModelDataJobProposalsUsers({
    this.id,
    this.name,
    this.email,
    this.phone,
    this.profile,
  });
  JobDetailsModelDataJobProposalsUsers.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
    profile = json['profile']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['email'] = email;
    data['phone'] = phone;
    data['profile'] = profile;
    return data;
  }
}

class JobDetailsModelDataJobProposals {
/*
{
  "id": 1,
  "userId": 2,
  "jobId": 1,
  "description": "Hvyvyg",
  "requestBudget": 20,
  "attachments": "",
  "videoThumbnail": "",
  "isAccept": 0,
  "type": 2,
  "mileStoneDetails": "",
  "created": 1743506736,
  "modified": 1743506736,
  "users": {
    "id": 2,
    "name": "Jyoti Builders",
    "email": "jyoti@yopmail.com",
    "phone": "7888644412",
    "profile": "https://app.superinstajobs.com/uploads/1743437099493.0781.jpg"
  }
}
*/

  int? id;
  int? userId;
  int? jobId;
  String? description;
  int? requestBudget;
  List<JobAttachment>? attachments;
  String? videoThumbnail;
  int? isAccept;
  int? type;
  String? mileStoneDetails;
  int? created;
  int? modified;
  JobDetailsModelDataJobProposalsUsers? users;

  JobDetailsModelDataJobProposals({
    this.id,
    this.userId,
    this.jobId,
    this.description,
    this.requestBudget,
    this.attachments,
    this.videoThumbnail,
    this.isAccept,
    this.type,
    this.mileStoneDetails,
    this.created,
    this.modified,
    this.users,
  });
  JobDetailsModelDataJobProposals.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    userId = json['userId']?.toInt();
    jobId = json['jobId']?.toInt();
    description = json['description']?.toString();
    requestBudget = json['requestBudget']?.toInt();
    if (json['attachments'] != null && json['attachments'] is List) {
      attachments = (json['attachments'] as List)
          .map((e) => JobAttachment.fromJson(e))
          .toList();
    }
    videoThumbnail = json['videoThumbnail']?.toString();
    isAccept = json['isAccept']?.toInt();
    type = json['type']?.toInt();
    mileStoneDetails = json['mileStoneDetails']?.toString();
    created = json['created']?.toInt();
    modified = json['modified']?.toInt();
    users = (json['users'] != null) ? JobDetailsModelDataJobProposalsUsers.fromJson(json['users']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['userId'] = userId;
    data['jobId'] = jobId;
    data['description'] = description;
    data['requestBudget'] = requestBudget;
    if (attachments != null) {
      data['attachments'] = attachments!.map((e) => e.toJson()).toList();
    }
    data['videoThumbnail'] = videoThumbnail;
    data['isAccept'] = isAccept;
    data['type'] = type;
    data['mileStoneDetails'] = mileStoneDetails;
    data['created'] = created;
    data['modified'] = modified;
    if (users != null) {
      data['users'] = users!.toJson();
    }
    return data;
  }
}

class JobAttachment {
  String? name;
  int? mediaType;

  JobAttachment({this.name, this.mediaType});

  JobAttachment.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    mediaType = json['mediaType']?.toInt();
  }

  Map<String, dynamic> toJson() {
    return {
      'name': name,
      'mediaType': mediaType,
    };
  }
}

class JobDetailsModelDataJobImages {
/*
{
  "id": 1,
  "jobId": 1,
  "name": "https://app.superinstajobs.com/uploads/1738862433368.4587.jpg",
  "mediaType": 1,
  "videoThumbnail": "",
  "created": 1738862433,
  "modified": 1738862433
}
*/

  int? id;
  int? jobId;
  String? name;
  int? mediaType;
  String? videoThumbnail;
  int? created;
  int? modified;

  JobDetailsModelDataJobImages({
    this.id,
    this.jobId,
    this.name,
    this.mediaType,
    this.videoThumbnail,
    this.created,
    this.modified,
  });
  JobDetailsModelDataJobImages.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    jobId = json['jobId']?.toInt();
    name = json['name']?.toString();
    mediaType = json['mediaType']?.toInt();
    videoThumbnail = json['videoThumbnail']?.toString();
    created = json['created']?.toInt();
    modified = json['modified']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['jobId'] = jobId;
    data['name'] = name;
    data['mediaType'] = mediaType;
    data['videoThumbnail'] = videoThumbnail;
    data['created'] = created;
    data['modified'] = modified;
    return data;
  }
}

class JobDetailsModelDataUsers {
/*
{
  "id": 4,
  "name": "Jyoti",
  "email": "jyoti@gmail.com",
  "phone": "8074693258",
  "profile": "https://app.superinstajobs.com/uploads/1738859793805.6748.jpg",
  "country": "India",
  "state": "Punjab",
  "street": "Mohali Bypass, 2722, Sector 70",
  "latitude": 30.704649,
  "longitude": 76.71787,
  "totalJobPosted": 1,
  "totalOfferPurchased": 0,
  "totalAmountSpend": 0
}
*/

  int? id;
  String? name;
  String? email;
  String? phone;
  String? profile;
  String? country;
  String? state;
  String? street;
  double? latitude;
  double? longitude;
  int? totalJobPosted;
  int? totalOfferPurchased;
  int? totalAmountSpend;

  JobDetailsModelDataUsers({
    this.id,
    this.name,
    this.email,
    this.phone,
    this.profile,
    this.country,
    this.state,
    this.street,
    this.latitude,
    this.longitude,
    this.totalJobPosted,
    this.totalOfferPurchased,
    this.totalAmountSpend,
  });
  JobDetailsModelDataUsers.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
    profile = json['profile']?.toString();
    country = json['country']?.toString();
    state = json['state']?.toString();
    street = json['street']?.toString();
    latitude = json['latitude']?.toDouble();
    longitude = json['longitude']?.toDouble();
    totalJobPosted = json['totalJobPosted']?.toInt();
    totalOfferPurchased = json['totalOfferPurchased']?.toInt();
    totalAmountSpend = json['totalAmountSpend']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['email'] = email;
    data['phone'] = phone;
    data['profile'] = profile;
    data['country'] = country;
    data['state'] = state;
    data['street'] = street;
    data['latitude'] = latitude;
    data['longitude'] = longitude;
    data['totalJobPosted'] = totalJobPosted;
    data['totalOfferPurchased'] = totalOfferPurchased;
    data['totalAmountSpend'] = totalAmountSpend;
    return data;
  }
}

class JobDetailsModelDataCategories {
/*
{
  "id": 1,
  "name": "Builders",
  "image": "https://app.superinstajobs.com/uploads/1722582520107.6833.png",
  "status": 1,
  "isSubCategories": 1,
  "created": 0,
  "modified": 1722582520
}
*/

  int? id;
  String? name;
  String? image;
  int? status;
  int? isSubCategories;
  int? created;
  int? modified;

  JobDetailsModelDataCategories({
    this.id,
    this.name,
    this.image,
    this.status,
    this.isSubCategories,
    this.created,
    this.modified,
  });
  JobDetailsModelDataCategories.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    image = json['image']?.toString();
    status = json['status']?.toInt();
    isSubCategories = json['isSubCategories']?.toInt();
    created = json['created']?.toInt();
    modified = json['modified']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['image'] = image;
    data['status'] = status;
    data['isSubCategories'] = isSubCategories;
    data['created'] = created;
    data['modified'] = modified;
    return data;
  }
}

class JobDetailsModelData {
/*
{
  "id": 1,
  "userId": 4,
  "title": "Need a Plumber for Tap fixing",
  "categoryId": 1,
  "subCategoryId": 3,
  "devilryTime": 1,
  "isJobEnd": 0,
  "country": "",
  "state": "",
  "latitude": 0,
  "longitude": 0,
  "descriptions": "Need a plumber to fix me bathroom tap urgently.",
  "assignUserId": 0,
  "locations": "",
  "totalBudgets": 500,
  "isRaiseDispute": 0,
  "attachments": "https://app.superinstajobs.com/uploads/1738862433368.4587.jpg",
  "defaultVideoLink": "",
  "acceptedBudget": 0,
  "isAssigned": 0,
  "isFeature": 0,
  "isAnyWhere": 1,
  "skills": "Plumber",
  "priceForm": 400,
  "priceTo": 400,
  "experience": "Expert",
  "isBoosted": 0,
  "boostTime": 0,
  "disputeId": 0,
  "created": 1738862433,
  "modified": 1738862433,
  "isFav": 0,
  "totalProposals": 1,
  "totalPostedJobs": 0,
  "isSendProposals": 1,
  "categories": {
    "id": 1,
    "name": "Builders",
    "image": "https://app.superinstajobs.com/uploads/1722582520107.6833.png",
    "status": 1,
    "isSubCategories": 1,
    "created": 0,
    "modified": 1722582520
  },
  "users": {
    "id": 4,
    "name": "Jyoti",
    "email": "jyoti@gmail.com",
    "phone": "8074693258",
    "profile": "https://app.superinstajobs.com/uploads/1738859793805.6748.jpg",
    "country": "India",
    "state": "Punjab",
    "street": "Mohali Bypass, 2722, Sector 70",
    "latitude": 30.704649,
    "longitude": 76.71787,
    "totalJobPosted": 1,
    "totalOfferPurchased": 0,
    "totalAmountSpend": 0
  },
  "isSubmit": 0,
  "isRated": 0,
  "jobImages": [
    {
      "id": 1,
      "jobId": 1,
      "name": "https://app.superinstajobs.com/uploads/1738862433368.4587.jpg",
      "mediaType": 1,
      "videoThumbnail": "",
      "created": 1738862433,
      "modified": 1738862433
    }
  ],
  "jobProposals": [
    {
      "id": 1,
      "userId": 2,
      "jobId": 1,
      "description": "Hvyvyg",
      "requestBudget": 20,
      "attachments": "",
      "videoThumbnail": "",
      "isAccept": 0,
      "type": 2,
      "mileStoneDetails": "",
      "created": 1743506736,
      "modified": 1743506736,
      "users": {
        "id": 2,
        "name": "Jyoti Builders",
        "email": "jyoti@yopmail.com",
        "phone": "7888644412",
        "profile": "https://app.superinstajobs.com/uploads/1743437099493.0781.jpg"
      }
    }
  ],
  "subCategory": {
    "id": 3,
    "categoryId": 1,
    "name": "Plumber",
    "image": "",
    "status": 0,
    "created": 0,
    "modified": 0
  },
  "NewjobMileStones": [
    ""
  ],
  "jobMileStones": [
    ""
  ],
  "totalJobMileStones": 0,
  "jobMileStonesBudget": 0,
  "jobMileStonesPaid": 0,
  "chats": [
    ""
  ]
}
*/

  int? id;
  int? userId;
  String? title;
  int? categoryId;
  int? subCategoryId;
  int? devilryTime;
  int? isJobEnd;
  String? country;
  String? state;
  int? latitude;
  int? longitude;
  String? descriptions;
  int? assignUserId;
  String? locations;
  int? totalBudgets;
  int? isRaiseDispute;
  String? attachments;
  String? defaultVideoLink;
  int? acceptedBudget;
  int? isAssigned;
  int? isFeature;
  int? isAnyWhere;
  String? skills;
  int? priceForm;
  int? priceTo;
  String? experience;
  int? isBoosted;
  int? boostTime;
  int? disputeId;
  int? created;
  int? modified;
  int? isFav;
  int? totalProposals;
  int? totalPostedJobs;
  int? isSendProposals;
  JobDetailsModelDataCategories? categories;
  JobDetailsModelDataUsers? users;
  int? isSubmit;
  int? isRated;
  List<JobDetailsModelDataJobImages?>? jobImages;
  List<JobDetailsModelDataJobProposals?>? jobProposals;
  JobDetailsModelDataSubCategory? subCategory;
  List<String?>? NewjobMileStones;
  List<String?>? jobMileStones;
  int? totalJobMileStones;
  int? jobMileStonesBudget;
  int? jobMileStonesPaid;
  List<String?>? chats;

  JobDetailsModelData({
    this.id,
    this.userId,
    this.title,
    this.categoryId,
    this.subCategoryId,
    this.devilryTime,
    this.isJobEnd,
    this.country,
    this.state,
    this.latitude,
    this.longitude,
    this.descriptions,
    this.assignUserId,
    this.locations,
    this.totalBudgets,
    this.isRaiseDispute,
    this.attachments,
    this.defaultVideoLink,
    this.acceptedBudget,
    this.isAssigned,
    this.isFeature,
    this.isAnyWhere,
    this.skills,
    this.priceForm,
    this.priceTo,
    this.experience,
    this.isBoosted,
    this.boostTime,
    this.disputeId,
    this.created,
    this.modified,
    this.isFav,
    this.totalProposals,
    this.totalPostedJobs,
    this.isSendProposals,
    this.categories,
    this.users,
    this.isSubmit,
    this.isRated,
    this.jobImages,
    this.jobProposals,
    this.subCategory,
    this.NewjobMileStones,
    this.jobMileStones,
    this.totalJobMileStones,
    this.jobMileStonesBudget,
    this.jobMileStonesPaid,
    this.chats,
  });
  JobDetailsModelData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    userId = json['userId']?.toInt();
    title = json['title']?.toString();
    categoryId = json['categoryId']?.toInt();
    subCategoryId = json['subCategoryId']?.toInt();
    devilryTime = json['devilryTime']?.toInt();
    isJobEnd = json['isJobEnd']?.toInt();
    country = json['country']?.toString();
    state = json['state']?.toString();
    latitude = json['latitude']?.toInt();
    longitude = json['longitude']?.toInt();
    descriptions = json['descriptions']?.toString();
    assignUserId = json['assignUserId']?.toInt();
    locations = json['locations']?.toString();
    totalBudgets = json['totalBudgets']?.toInt();
    isRaiseDispute = json['isRaiseDispute']?.toInt();
    attachments = json['attachments']?.toString();
    defaultVideoLink = json['defaultVideoLink']?.toString();
    acceptedBudget = json['acceptedBudget']?.toInt();
    isAssigned = json['isAssigned']?.toInt();
    isFeature = json['isFeature']?.toInt();
    isAnyWhere = json['isAnyWhere']?.toInt();
    skills = json['skills']?.toString();
    priceForm = json['priceForm']?.toInt();
    priceTo = json['priceTo']?.toInt();
    experience = json['experience']?.toString();
    isBoosted = json['isBoosted']?.toInt();
    boostTime = json['boostTime']?.toInt();
    disputeId = json['disputeId']?.toInt();
    created = json['created']?.toInt();
    modified = json['modified']?.toInt();
    isFav = json['isFav']?.toInt();
    totalProposals = json['totalProposals']?.toInt();
    totalPostedJobs = json['totalPostedJobs']?.toInt();
    isSendProposals = json['isSendProposals']?.toInt();
    categories = (json['categories'] != null) ? JobDetailsModelDataCategories.fromJson(json['categories']) : null;
    users = (json['users'] != null) ? JobDetailsModelDataUsers.fromJson(json['users']) : null;
    isSubmit = json['isSubmit']?.toInt();
    isRated = json['isRated']?.toInt();
    if (json['jobImages'] != null) {
      final v = json['jobImages'];
      final arr0 = <JobDetailsModelDataJobImages>[];
      v.forEach((v) {
        arr0.add(JobDetailsModelDataJobImages.fromJson(v));
      });
      jobImages = arr0;
    }
    if (json['jobProposals'] != null) {
      final v = json['jobProposals'];
      final arr0 = <JobDetailsModelDataJobProposals>[];
      v.forEach((v) {
        arr0.add(JobDetailsModelDataJobProposals.fromJson(v));
      });
      jobProposals = arr0;
    }
    subCategory = (json['subCategory'] != null) ? JobDetailsModelDataSubCategory.fromJson(json['subCategory']) : null;
    if (json['NewjobMileStones'] != null) {
      final v = json['NewjobMileStones'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      NewjobMileStones = arr0;
    }
    if (json['jobMileStones'] != null) {
      final v = json['jobMileStones'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      jobMileStones = arr0;
    }
    totalJobMileStones = json['totalJobMileStones']?.toInt();
    jobMileStonesBudget = json['jobMileStonesBudget']?.toInt();
    jobMileStonesPaid = json['jobMileStonesPaid']?.toInt();
    if (json['chats'] != null) {
      final v = json['chats'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      chats = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['userId'] = userId;
    data['title'] = title;
    data['categoryId'] = categoryId;
    data['subCategoryId'] = subCategoryId;
    data['devilryTime'] = devilryTime;
    data['isJobEnd'] = isJobEnd;
    data['country'] = country;
    data['state'] = state;
    data['latitude'] = latitude;
    data['longitude'] = longitude;
    data['descriptions'] = descriptions;
    data['assignUserId'] = assignUserId;
    data['locations'] = locations;
    data['totalBudgets'] = totalBudgets;
    data['isRaiseDispute'] = isRaiseDispute;
    data['attachments'] = attachments;
    data['defaultVideoLink'] = defaultVideoLink;
    data['acceptedBudget'] = acceptedBudget;
    data['isAssigned'] = isAssigned;
    data['isFeature'] = isFeature;
    data['isAnyWhere'] = isAnyWhere;
    data['skills'] = skills;
    data['priceForm'] = priceForm;
    data['priceTo'] = priceTo;
    data['experience'] = experience;
    data['isBoosted'] = isBoosted;
    data['boostTime'] = boostTime;
    data['disputeId'] = disputeId;
    data['created'] = created;
    data['modified'] = modified;
    data['isFav'] = isFav;
    data['totalProposals'] = totalProposals;
    data['totalPostedJobs'] = totalPostedJobs;
    data['isSendProposals'] = isSendProposals;
    if (categories != null) {
      data['categories'] = categories!.toJson();
    }
    if (users != null) {
      data['users'] = users!.toJson();
    }
    data['isSubmit'] = isSubmit;
    data['isRated'] = isRated;
    if (jobImages != null) {
      final v = jobImages;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['jobImages'] = arr0;
    }
    if (jobProposals != null) {
      final v = jobProposals;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['jobProposals'] = arr0;
    }
    if (subCategory != null) {
      data['subCategory'] = subCategory!.toJson();
    }
    if (NewjobMileStones != null) {
      final v = NewjobMileStones;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['NewjobMileStones'] = arr0;
    }
    if (jobMileStones != null) {
      final v = jobMileStones;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['jobMileStones'] = arr0;
    }
    data['totalJobMileStones'] = totalJobMileStones;
    data['jobMileStonesBudget'] = jobMileStonesBudget;
    data['jobMileStonesPaid'] = jobMileStonesPaid;
    if (chats != null) {
      final v = chats;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['chats'] = arr0;
    }
    return data;
  }
}

class JobDetailsModel {
/*
{
  "success": true,
  "message": "Job details",
  "status": 200,
  "data": {
    "id": 1,
    "userId": 4,
    "title": "Need a Plumber for Tap fixing",
    "categoryId": 1,
    "subCategoryId": 3,
    "devilryTime": 1,
    "isJobEnd": 0,
    "country": "",
    "state": "",
    "latitude": 0,
    "longitude": 0,
    "descriptions": "Need a plumber to fix me bathroom tap urgently.",
    "assignUserId": 0,
    "locations": "",
    "totalBudgets": 500,
    "isRaiseDispute": 0,
    "attachments": "https://app.superinstajobs.com/uploads/1738862433368.4587.jpg",
    "defaultVideoLink": "",
    "acceptedBudget": 0,
    "isAssigned": 0,
    "isFeature": 0,
    "isAnyWhere": 1,
    "skills": "Plumber",
    "priceForm": 400,
    "priceTo": 400,
    "experience": "Expert",
    "isBoosted": 0,
    "boostTime": 0,
    "disputeId": 0,
    "created": 1738862433,
    "modified": 1738862433,
    "isFav": 0,
    "totalProposals": 1,
    "totalPostedJobs": 0,
    "isSendProposals": 1,
    "categories": {
      "id": 1,
      "name": "Builders",
      "image": "https://app.superinstajobs.com/uploads/1722582520107.6833.png",
      "status": 1,
      "isSubCategories": 1,
      "created": 0,
      "modified": 1722582520
    },
    "users": {
      "id": 4,
      "name": "Jyoti",
      "email": "jyoti@gmail.com",
      "phone": "8074693258",
      "profile": "https://app.superinstajobs.com/uploads/1738859793805.6748.jpg",
      "country": "India",
      "state": "Punjab",
      "street": "Mohali Bypass, 2722, Sector 70",
      "latitude": 30.704649,
      "longitude": 76.71787,
      "totalJobPosted": 1,
      "totalOfferPurchased": 0,
      "totalAmountSpend": 0
    },
    "isSubmit": 0,
    "isRated": 0,
    "jobImages": [
      {
        "id": 1,
        "jobId": 1,
        "name": "https://app.superinstajobs.com/uploads/1738862433368.4587.jpg",
        "mediaType": 1,
        "videoThumbnail": "",
        "created": 1738862433,
        "modified": 1738862433
      }
    ],
    "jobProposals": [
      {
        "id": 1,
        "userId": 2,
        "jobId": 1,
        "description": "Hvyvyg",
        "requestBudget": 20,
        "attachments": "",
        "videoThumbnail": "",
        "isAccept": 0,
        "type": 2,
        "mileStoneDetails": "",
        "created": 1743506736,
        "modified": 1743506736,
        "users": {
          "id": 2,
          "name": "Jyoti Builders",
          "email": "jyoti@yopmail.com",
          "phone": "7888644412",
          "profile": "https://app.superinstajobs.com/uploads/1743437099493.0781.jpg"
        }
      }
    ],
    "subCategory": {
      "id": 3,
      "categoryId": 1,
      "name": "Plumber",
      "image": "",
      "status": 0,
      "created": 0,
      "modified": 0
    },
    "NewjobMileStones": [
      ""
    ],
    "jobMileStones": [
      ""
    ],
    "totalJobMileStones": 0,
    "jobMileStonesBudget": 0,
    "jobMileStonesPaid": 0,
    "chats": [
      ""
    ]
  }
}
*/

  bool? success;
  String? message;
  int? status;
  JobDetailsModelData? data;

  JobDetailsModel({
    this.success,
    this.message,
    this.status,
    this.data,
  });
  JobDetailsModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    message = json['message']?.toString();
    status = json['status']?.toInt();
    data = (json['data'] != null) ? JobDetailsModelData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    data['message'] = message;
    data['status'] = status;
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}
